# we could tell Git about bits of Code we write and don't have a place to keep


bind 'set enable-bracketed-paste off' 2>/dev/null; \
unset zle_bracketed_paste; setopt InteractiveComments 2>/dev/null


# List the words overloaded by a few particular Python Imports
#
#   '.count' defined as:  bytes.count, list.count, str.count
#   '.format' defined as:  __builtins__.format, str.format
#   '.hex' defined as:  __builtins__.hex, bytes.hex
#   '.index' defined as:  bytes.index, list.index, str.index
#   '.split' defined as:  re.split, str.split
#
#   39 regular methods and 34 dunder methods defined by both 'bytes' and 'str'
#

python3

import builtins
import re

namers = __builtins__, bytes, list, re, str
pairs = list((i, j) for i in namers for j in namers if i is not j)
pairs = sorted(set(pairs), key=lambda _: (_[0].__name__,  _[-1].__name__))

steps = list()
for i, pair in enumerate(pairs):
    names = [pair[0].__name__,  pair[-1].__name__]
    #
    sorted_names = sorted(names)
    if sorted_names in steps:
        continue
    steps.append(sorted_names)
    #
    print()
    print(i, *names)
    a = set(dir(pair[0]))
    b = set(dir(pair[-1]))
    print(sorted(a & b))
