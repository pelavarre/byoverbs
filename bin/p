(set -xe; python3 -i -c '' "$@" </dev/null 2>/dev/null)


python3 -i -c '''


import importlib
import sys


class LazyImport:
    """Defer the work of "import X as Y" till first Y.Z fetched"""

    def __init__(self, import_, as_=None):
        self.import_ = import_
        self.as_ = import_ if (as_ is None) else as_

    def __getattr__(self, name):
        module = importlib.import_module(self.import_)
        globals()[self.as_] = module
        return getattr(module, name)


print(">>> import ...", file=sys.stderr)
print(">>> ", file=sys.stderr)

__main__ = LazyImport(import_="__main__")
argparse = LazyImport(import_="argparse")
collections = LazyImport(import_="collections")
difflib = LazyImport(import_="difflib")
dt = LazyImport(import_="datetime", as_="dt")
functools = LazyImport(import_="functools")
hashlib = LazyImport(import_="hashlib")
os = LazyImport(import_="os")
pathlib = LazyImport(import_="pathlib")
pdb = LazyImport(import_="pdb")
random = LazyImport(import_="random")
re = LazyImport(import_="re")
select = LazyImport(import_="select")
shlex = LazyImport(import_="shlex")
shutil = LazyImport(import_="shutil")
signal = LazyImport(import_="signal")
stat = LazyImport(import_="stat")
string = LazyImport(import_="string")
subprocess = LazyImport(import_="subprocess")
sys = LazyImport(import_="sys")
termios = LazyImport(import_="termios")
textwrap = LazyImport(import_="textwrap")
time = LazyImport(import_="time")
traceback = LazyImport(import_="traceback")
tty = LazyImport(import_="tty")
unicodedata = LazyImport(import_="unicodedata")

import urllib.parse


''' "$@"
